{"link": ["/qq_35037977/article/details/77540117"], "description": ["\r\n自python2.6开始，新增了一种格式化字符串的函数str.format()，可谓威力十足。那么，他跟之前的%型格式化字符串相比，有什么优越的存在呢？让我们来揭开它羞答答的面纱。语法它通过{}和:来代替%。“映射”示例通过位置In [1]: '{0},{1}'.format('kzc',18)  \nOut[1]: 'kzc,18'  \nIn [2]: '{},{}'.format('kzc',18...        "], "title": ["\r\n        Python——format字符串格式化            \r\n        "]}
{"link": ["/qq_35037977/article/details/77341365"], "description": ["\r\n权限操作：\n  操作\n  位值\n  说明  关注用户\n  0b00000001(0x01)\n  关注其他用户\n  发表评论\n  0b00000010(0x02)\n  在别人写的文章中发表评论\n  写文章\n  0b00000100\n  发表文章\n  管理他人评论\n  0b00001000\n  查处他人不良评论\n  管理员\n  0b10000000\n  管理网站\n可以写成一个类方便调用class Per...        "], "title": ["\r\n        Flask——用户权限管理            \r\n        "]}
{"link": ["/qq_35037977/article/details/77252870"], "description": ["\r\n1.导入TimedJSONWebSignatureSerializer，用于生成具有过期时间的JSON Web签名。from itsdangerous import TimedJSONWebSignatureSerializer as Serializer\ns=Serializer('secret key',expires_in=3600)\ntoken=s.dumps({'key':'val'})#...        "], "title": ["\r\n        Flask——itsdangerous验证邮箱            \r\n        "]}
{"link": ["/qq_35037977/article/details/77100065"], "description": ["\r\ngit rebase -i HEAD~3 #表示最新三个commit\ngit rebase -i [commit] #会列出[commit]之后的所有commit按照提示修改pick 为s或f#要添加--force强制推送\ngit push --force origin myfeature参考 \nGit标准工作流程 \nGit合并多个 Commit...        "], "title": ["\r\n        Git——合并多个commit            \r\n        "]}
{"link": ["/qq_35037977/article/details/77016856"], "description": ["\r\n详细文档 \n使用例子：from flask import Flask,redirect,url_for,render_template,session,flash\nfrom flask_bootstrap import Bootstrap\nfrom flask_wtf import FlaskForm\nfrom wtforms import StringField,SubmitField\nfrom...        "], "title": ["\r\n        Flask——表单类            \r\n        "]}
{"link": ["/qq_35037977/article/details/76788677"], "description": ["\r\n避免大量重复参数的访问导致视图函数代码重复、乱的问题， \nFlask使用上下文是一些变量再一个线程中全局可访问，不会干扰其他线程。1.程序上下文、请求上下文\n  变量名\n  上下文\n  说明  curr_app\n  程序上下文\n  当前激活程序的程序实例\n  g\n  程序上下文\n  处理请求时用于临时存储的对象，每次请求会重设g\n  request\n  请求上下文\n  请求对象，封装了HTTP请求的...        "], "title": ["\r\n        Flask——请求响应循环            \r\n        "]}
{"link": ["/qq_35037977/article/details/76707871"], "description": ["\r\n九、查看信息# 显示有变更的文件\n$ git status# 显示当前分支的版本历史\n$ git log# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat# 搜索提交历史，根据关键词\n$ git log -S [keyword]# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=fo...        "], "title": ["\r\n        Git常用操作系列（4）            \r\n        "]}
{"link": ["/qq_35037977/article/details/76472737"], "description": ["\r\n六、标签# 列出所有tag\n$ git tag# 新建一个tag在当前commit\n$ git tag [tag]# 新建一个tag在指定commit\n$ git tag [tag] [commit]# 删除本地tag\n$ git tag -d [tag]# 删除远程tag\n$ git push origin :refs/tags/[tagName]# 查看tag信息\n$ git show [tag...        "], "title": ["\r\n        Git常用操作系列（3）            \r\n        "]}
{"link": ["/qq_35037977/article/details/76402710"], "description": ["\r\n四、代码提交# 提交暂存区到仓库区\n$ git commit -m [message]# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a# 提交时显示所有diff信息\n$ git commit -v# 使用一次新的commit，替代上一次提...        "], "title": ["\r\n        Git常用操作系列（2）            \r\n        "]}
{"link": ["/qq_35037977/article/details/76401593"], "description": ["\r\nWorkspace：工作区\nIndex / Stage：暂存区\nRepository：仓库区（或本地仓库）\nRemote：远程仓库\n1.新建代码库# 在当前目录新建一个Git代码库\n$ git init# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]# 下载一个项目和它的整个代码历史\n$ git clone [url]二、配置Git的设置文件为.gitc...        "], "title": ["\r\n        Git常用操作系列（1）            \r\n        "]}
{"link": ["/qq_35037977/article/details/76274157"], "description": ["\r\n详细百度语音识别api文档# 引入Speech SDK\nfrom aip import AipSpeech# 定义常量\nAPP_ID = '你的 App ID'\nAPI_KEY = '你的 API Key'\nSECRET_KEY = '你的 Secret Key'# 初始化AipSpeech对象\naipSpeech = AipSpeech(APP_ID, API_KEY, SECRET_KEY)在上...        "], "title": ["\r\n        Python——百度语音识别api            \r\n        "]}
{"link": ["/qq_35037977/article/details/76142842"], "description": ["\r\n一篇写的很好的pyquery文章 \npyquery官方文档quick start:from pyquery import PyQuery as pq\nfrom lxml import etree\nimport urllib\nd = pq(\"\")\nd = pq(etree.fromstring(\"\"))\nd = pq(url=your_url)\nd...        "], "title": ["\r\n        Python——pyquery解析html            \r\n        "]}
{"link": ["/qq_35037977/article/details/75727891"], "description": ["\r\n例子，查询火车余票的命令行应用\"\"\"命令行火车票查看器Usage:\n    ticket [-gdtkz] [-S]   Options:\n    -h,--help   显示帮助菜单\n    -g          高铁\n    -d          动车\n    -t          特快\n    -k          快速\n    -z...        "], "title": ["\r\n        Python——解析命令行参数docopt模块            \r\n        "]}
{"link": ["/qq_35037977/article/details/75367157"], "description": ["\r\n用到的库：Pillow，argparse \n思路： \n    1.用灰度值公式将像素的rgb值转换成灰度值 \n    2.创建一个灰度值的映射字符列表 \n    3.打印字符，输出到txt文件 \n用法： \n    python ascii.py  file -o .output.txt --width 40 --height 40 \n    file 是需要转换的图片的路径 \n    -o -wid...        "], "title": ["\r\n        Python——图片转字符画            \r\n        "]}
{"link": ["/qq_35037977/article/details/75339934"], "description": ["\r\nUbuntu默认Python为2.7，所以安装Python包时安装的为py2的包。利用alternatives机制更改py3为默认。shell里执行：sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100\nsudo update-alternatives --install /usr/bin/pyt...        "], "title": ["\r\n        ubuntu16.04——设置python3为默认及库的安装            \r\n        "]}
